"0","# Assuming 'choice_data' is your dataset"
"0","df = conjoint_data"
"0","# Load the ChoiceModelR package"
"0","library(ChoiceModelR)"
"0",""
"0","# Ensure the data is in the correct format"
"0","# The structure should be:"
"0","# UnitID (survey_id), Set (choice_set), Alt (label), X_1 to X_n (attributes), y (choice_indicator)"
"0","# Assuming the order of attributes in your dataset is as follows:"
"0","# 'firearms', 'fossil_fuels', 'may_employ_children', 'racial_diversity', 'gender_equal_pay', 'pension'"
"0","# and 'choice_indicator' is the dependent variable"
"0",""
"0","df_formatted <- df[, c(""survey_id"", ""choice_set"", ""label"", ""firearms"", ""fossil_fuels"", "
"0","                       ""may_employ_children"", ""no_racial_diversity"", ""no_gender_equal_pay"", "
"0","                       ""pension"", ""choice_indicator"")]"
"0",""
"0","df_formatted <- df_formatted %>%"
"0","  group_by(survey_id, choice_set) %>%"
"0","  mutate("
"0","    # For each choice set, identify which option was chosen"
"0","    chosen_option = ifelse(choice_indicator == 1, label, NA_real_),"
"0","    chosen_option = max(chosen_option, na.rm = TRUE),"
"0","    # Set the first row to the chosen option, and second row to 0"
"0","    choice_indicator_updated = ifelse(row_number() == 1, chosen_option, 0)"
"0","  ) %>%"
"0","  select(-chosen_option) %>%"
"0","  ungroup()"
"0",""
"0","df_formatted = df_formatted %>% "
"0","  mutate(choice_indicator = choice_indicator_updated) %>% "
"0","  select(-choice_indicator_updated)"
"0",""
"0",""
"0",""
"0","# Rename columns to match the expected format in ChoiceModelR"
"0","names(df_formatted) <- c(""UnitID"", ""Set"", ""Alt"", "
"0","                         ""X_1"", ""X_2"", ""X_3"", ""X_4"", ""X_5"", "
"0","                         ""X_6"", ""y"")"
"0",""
"0","table(df_formatted$Alt, df_formatted$y)"
"1","   
"
"1","   "
"1","     0"
"1","     1"
"1","     2"
"1","
  1"
"1","     0"
"1"," 12631"
"1"," 12809"
"1","
  2"
"1"," 25440"
"1","     0"
"1","     0"
"1","
"
"0","# Set up the xcoding vector"
"0","# Assuming 'pension' (X_6) is the only continuous attribute"
"0","xcoding <- c(0, 0, 0, 0, 0, 1)"
"0",""
"0","# Set up the MCMC parameters"
"0","mcmc <- list(R = 10000, use = 5000, s = 0.1)  # Adjust as necessary"
"0",""
"0","output_directory <- ""~/Documents/GitHub/esg_pensions"""
"0",""
"0","df_formatted = as.data.frame(df_formatted)"
"0",""
"0","# Run the choicemodelr function"
"0","result <- choicemodelr(data = df_formatted, xcoding = xcoding, mcmc = mcmc, directory = output_directory)"
"2","Error in `[<-`(`*tmp*`, nn, Xind, value = (Xt[nn, i] == j) * 1 - (Xt[nn,  : 
  subscript out of bounds
"
